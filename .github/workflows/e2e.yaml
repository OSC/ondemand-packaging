name: E2E tests

on:
  push:
    branches: [main]
  pull_request:

jobs:
  buildbox:
    strategy:
      fail-fast: false
      matrix:
        dist:
          - el7
          - el8
          - el9
          - ubuntu-20.04
          - ubuntu-22.04
          - amzn2023
        arch:
          - x86_64
          - aarch64
    runs-on: ubuntu-latest
    name: Buildbox tests
    steps:
      - name: Checkout ${{ github.sha	}}
        uses: actions/checkout@v2
      - name: Setup Ruby using Bundler
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.0.4'
          bundler: '2.1.4'
          bundler-cache: true
      - name: Pull the build box
        run: bundle exec rake ood_packaging:buildbox:pull[${{ matrix.dist }}] || exit 0
      - name: Build the build box
        run: bundle exec rake ood_packaging:buildbox:build[${{ matrix.dist }},${{ matrix.arch }}]
      - name: Export Docker image
        run: bundle exec rake ood_packaging:buildbox:save[${{ matrix.dist }},/tmp/ood_packaging-${{ matrix.dist }}-${{ matrix.arch }}.tar.gz]
      - name: Upload Docker image
        uses: actions/upload-artifact@v2
        with:
          name: image-${{ matrix.dist }}-${{ matrix.arch }}
          path: /tmp/ood_packaging-${{ matrix.dist }}-${{ matrix.arch }}.tar.gz
  package-el:
    needs: [buildbox]
    strategy:
      fail-fast: false
      matrix:
        dist:
          - el7
          - el8
          - el9
          - amzn2023
        arch:
          - x86_64
          - aarch64
        package:
          - ondemand-release
          - ondemand-release-latest
          - ondemand-runtime
          - passenger
          - cjose
          - mod_auth_openidc
          - ondemand_exporter
          - ondemand-compute
          - python-websockify
          - turbovnc
        include:
          - dist: el7
            package: sqlite
          - dist: amzn2023
            package: scl-utils
        exclude:
          - dist: el9
            package: cjose
          - dist: el9
            package: mod_auth_openidc
          - aarch: aarch64
            package: ondemand-release
          - aarch: aarch64
            package: ondemand-release-latest
          - aarch: aarch64
            package: ondemand-compute
    runs-on: ubuntu-latest
    name: Package test package=${{ matrix.package }} dist=${{ matrix.dist }}
    steps:
      - name: Checkout ${{ github.sha	}}
        uses: actions/checkout@v2
      - name: Setup Ruby ${{ matrix.ruby }} using Bundler ${{ matrix.bundler }}
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.0.4'
          bundler: '2.1.4'
          bundler-cache: true
      - name: Download image
        uses: actions/download-artifact@v2
        with:
          name: image-${{ matrix.dist }}-${{ matrix.arch }}
          path: /tmp
      - name: Load image
        run: docker load --input /tmp/ood_packaging-${{ matrix.dist }}-${{ matrix.arch }}.tar.gz
      - name: Build package
        run: bundle exec rake ood_packaging:package:${{ matrix.package }}[${{ matrix.dist }},${{ matrix.arch }}]
        env:
          OOD_PACKAGING_DEBUG: 'true'
  package-deb:
    needs: [buildbox]
    strategy:
      fail-fast: false
      matrix:
        dist:
          - ubuntu-20.04
          - ubuntu-22.04
        arch:
          - x86_64
          - aarch64
        package:
          - ondemand-release
          - ondemand-release-latest
          - passenger
        exclude:
          - aarch: aarch64
            package: ondemand-release
          - aarch: aarch64
            package: ondemand-release-latest
    runs-on: ubuntu-latest
    name: Package test package=${{ matrix.package }} dist=${{ matrix.dist }}
    steps:
      - name: Checkout ${{ github.sha	}}
        uses: actions/checkout@v2
      - name: Setup Ruby ${{ matrix.ruby }} using Bundler ${{ matrix.bundler }}
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.0.4'
          bundler: '2.1.4'
          bundler-cache: true
      - name: Download image
        uses: actions/download-artifact@v2
        with:
          name: image-${{ matrix.dist }}-${{ matrix.arch }}
          path: /tmp
      - name: Load image
        run: docker load --input /tmp/ood_packaging-${{ matrix.dist }}-${{ matrix.arch }}.tar.gz
      - name: Build package
        run: bundle exec rake ood_packaging:package:${{ matrix.package }}[${{ matrix.dist }},${{ matrix.arch }}]
        env:
          OOD_PACKAGING_DEBUG: 'true'
  package-external:
    needs: [buildbox]
    strategy:
      fail-fast: false
      matrix:
        dist:
          - el7
          - el8
          - el9
          - ubuntu-20.04
          - ubuntu-22.04
          - amzn2023
        arch:
          - x86_64
          - aarch64
        package:
          - ondemand
        include:
          - dist: el7
            arch: x86_64
            package: bc_osc_rstudio_server
          - dist: el8
            arch: x86_64
            package: bc_osc_rstudio_server
          - dist: el9
            arch: x86_64
            package: bc_osc_rstudio_server
    runs-on: ubuntu-latest
    name: Package ${{ matrix.package }} dist=${{ matrix.dist }}
    steps:
      - name: Checkout ${{ github.sha	}}
        uses: actions/checkout@v2
      - name: Setup Ruby using Bundler
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.0.4'
          bundler: '2.1.4'
          bundler-cache: true
      - name: Download image
        uses: actions/download-artifact@v2
        with:
          name: image-${{ matrix.dist }}-${{ matrix.arch }}
          path: /tmp
      - name: Load image
        run: docker load --input /tmp/ood_packaging-${{ matrix.dist }}-${{ matrix.arch }}.tar.gz
      - name: Clone ${{ matrix.package }}
        run: |
          mkdir -p ./tmp
          git clone https://github.com/OSC/${{ matrix.package }}.git ./tmp/${{ matrix.package }}
      - name: Build ${{ matrix.package }} package
        run: ./bin/ood_packaging -w ./tmp/work -o ./tmp/output -d ${{ matrix.dist }} -a ${{ matrix.arch }} -V v3.1.0 -T --debug $(pwd)/tmp/${{ matrix.package }}
