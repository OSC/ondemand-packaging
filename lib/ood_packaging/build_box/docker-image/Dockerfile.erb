FROM --platform=<%= platform %> <%= base_image %>
ENV ARCH=<%= arch %> 
MAINTAINER Trey Dockendorf <tdockendorf@osc.edu>
ENV LANG=en_US.UTF-8
ENV LC_CTYPE=en_US.UTF-8
ENV USER=<%= ctr_user %>
ENV GEM_PATH=<%= ctr_gems_dir %>:
<% if dist == 'el7' -%>
RUN yum update -y && yum clean all && rm -rf /var/cache/yum/*
RUN yum install -y yum-utils epel-release centos-release-scl && yum clean all && rm -rf /var/cache/yum/*
RUN yum install -y <%= scl_ruby %>-ruby sudo which wget @buildsys-build \
    rpm-build rpmdevtools rpm-sign scl-utils-build && \
    yum clean all && rm -rf /var/cache/yum/*
RUN rm -f /etc/yum.repos.d/CentOS-Vault.repo /etc/yum.repos.d/CentOS-Sources.repo
RUN head -n 13 /etc/yum.repos.d/CentOS-SCLo-scl.repo > /etc/yum.repos.d/CentOS-SCLo.repo
RUN head -n 13 /etc/yum.repos.d/CentOS-SCLo-scl-rh.repo >> /etc/yum.repos.d/CentOS-SCLo.repo
RUN rm -f /etc/yum.repos.d/CentOS-SCLo-scl-rh.repo /etc/yum.repos.d/CentOS-SCLo-scl.repo
<% elsif dnf? -%>
RUN dnf update -y && dnf clean all && rm -rf /var/cache/dnf/*
RUN dnf install -y dnf-utils <%= dist =~ /^el/ ? 'epel-release' : '' %> langpacks-en glibc-langpack-en && dnf clean all && rm -rf /var/cache/dnf/*
<% if dist == 'el8' -%>
RUN dnf config-manager --set-enabled powertools && dnf clean all && rm -rf /var/cache/dnf/*
<% elsif dist == 'el9' -%>
RUN dnf config-manager --set-enabled crb && dnf clean all && rm -rf /var/cache/dnf/*
<% end -%>
<% if dist =~ /^el/ -%>
RUN dnf module enable -y ruby:<%= ruby_version %> nodejs:<%= nodejs_version %> && dnf clean all && rm -rf /var/cache/dnf/*
<% end -%>
RUN dnf install -y --allowerasing systemd ruby nodejs sudo which wget \
    gcc-c++ gcc make patch shadow-utils gnupg2 \
    rpm-build rpmdevtools rpm-sign <%= dist =~ /^el/ ? 'scl-utils-build' : '' %> && \
    dnf clean all && rm -rf /var/cache/dnf/*
<% elsif dist =~ /^ubuntu|debian/ -%>
ENV DEBIAN_FRONTEND=noninteractive
RUN apt update -y && apt upgrade -y && apt clean all -y
RUN apt update -y && apt install -y locales && locale-gen $LANG && \
    apt clean all -y
RUN apt update -y && apt install -y apt-transport-https ca-certificates \
    init debhelper devscripts dh-make build-essential apt-cudf lintian equivs \
    sudo rake wget curl ruby bundler && \
    apt clean all -y
<% if arch != 'ppc64le' %>
RUN echo "deb https://deb.nodesource.com/node_<%= nodejs_version %>.x <%= codename %> main" > /etc/apt/sources.list.d/nodesource.list
RUN curl -s https://deb.nodesource.com/gpgkey/nodesource.gpg.key | gpg --dearmor > /etc/apt/trusted.gpg.d/nodesource.gpg
<% end %>
<% end -%>
RUN ln -s /dev/null /etc/systemd/system/proc-sys-fs-binfmt_misc.automount
COPY . /build
RUN /bin/bash /build/install.sh
